schema {
  query: Query
  mutation: Mutation
}

type Auto {
  id: Integer!
  version: Integer!
  modellbezeichnung: String!
  hersteller: HerstellerType! 
  fin: String!
  kilometerstand: Integer
  auslieferungstag: String
  grundpreis: String!
  istAktuellesModell: Boolean!
  getriebeArt: GetriebeType!
  erzeugt: String!
  aktualisiert: String!
  eigentuemer: Eigentuemer
  ausstattungen: [Ausstattung]
}

type Eigentuemer {
  id: Integer!
  eigentuemer: String!
  geburtsdatum: String!
  fuehrerscheinnummer: String!
}

type Ausstattung {
  id: Integer!
  bezeichnung: String!
  preis: Float!
  verfuegbar: Boolean!
}

enum HerstellerType {
  VOLKSWAGEN
  AUDI
  DAIMLER
  RENAULT
}

enum GetriebeType {
  MANUELL
  AUTOMATIK
}

type Query {
  Autos(suchkriterien: SuchkriterienInput): [Auto!]
  Auto(id: ID!): Auto
}

input SuchkriterienInputKunde {
  modellbezeichnung: String
  hersteller: HerstellerType
  getriebeArt: GetriebeType
  istAktuellesModell: Boolean
  eigentuemer: String
  verfuegbar: Boolean
}

type Mutation {
  create(input: AutoInput!): CreatePayload
  update(id: ID!, input: AutoUpdateInput!): UpdatePayload
  delete(id: ID!): Boolean
}

type CreatePayload {
  id: Integer
}

type UpdatePayload {
  version: Integer
}

input AutoInput {
  modellbezeichnung: String!
  hersteller: HerstellerType! 
  fin: String!
  kilometerstand: Integer
  auslieferungstag: String
  grundpreis: String!
  istAktuellesModell: Boolean!
  getriebeArt: GetriebeType!
  eigentuemer: EigentuemerInput!
  ausstattungen: [AusstattungInput]
}

input AutoUpdateInput {
  modellbezeichnung: String!
  hersteller: HerstellerType! 
  fin: String!
  kilometerstand: Integer
  auslieferungstag: String
  grundpreis: String!
  istAktuellesModell: Boolean!
  getriebeArt: GetriebeType!
  eigentuemer: EigentuemerInput
}

input EigentuemerInput {
  eigentuemer: String!
  geburtsdatum: String!
  fuehrerscheinnummer: String!
}

input AusstattungInput {
  bezeichnung: String!
  preis: Float!
  verfuegbar: Boolean!
}
