export default remarkLintFileExtension;
export type Root = import('mdast').Root;
/**
 * File extension(s).
 */
export type Extensions = Array<string> | string;
/**
 * Configuration.
 */
export type Options = {
    /**
     * Allow no file extension such as `AUTHORS` or `LICENSE` (default: `true`).
     */
    allowExtensionless?: boolean | null | undefined;
    /**
     * Allowed file extension(s) (default: `['mdx', 'md']`).
     */
    extensions?: Readonly<Extensions> | null | undefined;
};
declare const remarkLintFileExtension: {
    (config?: string | 0 | 1 | 2 | readonly string[] | Readonly<Options> | [level: import("../../node_modules/unified-lint-rule/lib/index.js").Label | import("../../node_modules/unified-lint-rule/lib/index.js").Severity, option?: Readonly<Extensions> | Readonly<Options> | null | undefined] | null | undefined): ((tree: import("mdast").Root, file: import("vfile").VFile, next: import("unified").TransformCallback<import("mdast").Root>) => undefined) | undefined;
    readonly name: string;
};
//# sourceMappingURL=index.d.ts.map