"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var require_type_pattern_with_oneof_exports = {};
__export(require_type_pattern_with_oneof_exports, {
  rule: () => rule
});
module.exports = __toCommonJS(require_type_pattern_with_oneof_exports);
var import_utils = require("../utils.js");
const RULE_ID = "require-type-pattern-with-oneof";
const rule = {
  meta: {
    type: "suggestion",
    docs: {
      category: "Schema",
      description: "Enforce types with `@oneOf` directive have `error` and `ok` fields.",
      url: `https://the-guild.dev/graphql/eslint/rules/${RULE_ID}`,
      examples: [
        {
          title: "Correct",
          code: (
            /* GraphQL */
            `
            type Mutation {
              doSomething: DoSomethingMutationResult!
            }

            interface Error {
              message: String!
            }

            type DoSomethingMutationResult @oneOf {
              ok: DoSomethingSuccess
              error: Error
            }

            type DoSomethingSuccess {
              # ...
            }
          `
          )
        }
      ]
    },
    messages: {
      [RULE_ID]: '{{ nodeName }} is defined as output with "@oneOf" and must be defined with "{{ fieldName }}" field'
    },
    schema: []
  },
  create(context) {
    return {
      "Directive[name.value=oneOf][parent.kind=ObjectTypeDefinition]"({
        parent
      }) {
        var _a;
        const requiredFields = ["error", "ok"];
        for (const fieldName of requiredFields) {
          if (!((_a = parent.fields) == null ? void 0 : _a.some((field) => field.name.value === fieldName))) {
            context.report({
              node: parent.name,
              messageId: RULE_ID,
              data: {
                nodeName: (0, import_utils.displayNodeName)(parent),
                fieldName
              }
            });
          }
        }
      }
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  rule
});
