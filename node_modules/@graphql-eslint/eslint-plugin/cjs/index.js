"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, "default"), secondTarget && __copyProps(secondTarget, mod, "default"));
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var src_exports = {};
__export(src_exports, {
  configs: () => import_configs.configs,
  flatConfigs: () => import_flat_configs.flatConfigs,
  parseForESLint: () => import_parser.parseForESLint,
  processors: () => processors,
  requireGraphQLSchemaFromContext: () => import_utils.requireGraphQLSchemaFromContext,
  requireSiblingsOperations: () => import_utils.requireSiblingsOperations,
  rules: () => import_rules.rules
});
module.exports = __toCommonJS(src_exports);
var import_processor = require("./processor.js");
var import_parser = require("./parser.js");
var import_rules = require("./rules/index.js");
__reExport(src_exports, require("./testkit.js"), module.exports);
__reExport(src_exports, require("./types.js"), module.exports);
var import_utils = require("./utils.js");
var import_configs = require("./configs/index.js");
var import_flat_configs = require("./flat-configs.js");
const processors = { graphql: import_processor.processor };
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  configs,
  flatConfigs,
  parseForESLint,
  processors,
  requireGraphQLSchemaFromContext,
  requireSiblingsOperations,
  rules,
  ...require("./testkit.js"),
  ...require("./types.js")
});
