"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var flat_configs_exports = {};
__export(flat_configs_exports, {
  flatConfigs: () => flatConfigs
});
module.exports = __toCommonJS(flat_configs_exports);
var import_configs = require("./configs/index.js");
var import_parser = require("./parser.js");
const languageOptions = {
  parser: { parseForESLint: import_parser.parseForESLint }
};
const flatConfigs = {
  "operations-all": {
    languageOptions,
    rules: {
      ...import_configs.configs["operations-recommended"].rules,
      ...import_configs.configs["operations-all"].rules
    }
  },
  "operations-recommended": {
    languageOptions,
    rules: import_configs.configs["operations-recommended"].rules
  },
  relay: {
    languageOptions,
    rules: import_configs.configs.relay.rules
  },
  "schema-all": {
    languageOptions,
    rules: {
      ...import_configs.configs["schema-recommended"].rules,
      ...import_configs.configs["schema-all"].rules
    }
  },
  "schema-recommended": {
    languageOptions,
    rules: import_configs.configs["schema-recommended"].rules
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  flatConfigs
});
