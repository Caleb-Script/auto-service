import * as eslint from 'eslint';
import { Block } from './processor.mjs';
export { parseForESLint } from './parser.mjs';
export { rules } from './rules/index.mjs';
export { C as CategoryType, f as GraphQLESLintParseResult, i as GraphQLESLintRule, g as GraphQLESLintRuleContext, G as GraphQLESLintRuleListener, b as GraphQLInvalidTestCase, c as GraphQLRuleTester, a as GraphQLValidTestCase, O as OmitRecursively, P as ParserOptions, e as ParserServices, d as Pointer, R as ReportDescriptor, h as RuleDocsInfo, S as Schema, V as ValueOf } from './types-2e1afd7c.js';
export { requireGraphQLSchemaFromContext, requireSiblingsOperations } from './utils.mjs';
export { configs } from './configs/index.mjs';
export { flatConfigs } from './flat-configs.mjs';
import './rules/require-description.mjs';
import 'graphql';
import 'json-schema-to-ts/lib/types/type-utils/writable.js';
import '@graphql-tools/utils';
import 'estree';
import 'graphql-config';
import 'json-schema-to-ts';
import './estree-converter/types.mjs';

declare const processors: {
    graphql: eslint.Linter.Processor<string | Block>;
};

export { processors };
